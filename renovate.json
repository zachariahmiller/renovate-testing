{
  "enabled": true,
  "extends": [
    ":dependencyDashboard",
    ":semanticCommits",
    ":semanticCommitTypeAll(chore)",
    ":semanticCommitScopeDisabled"
  ],
  "forkProcessing": "enabled",
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "branchConcurrentLimit": 0,
  "prConcurrentLimit": 0,
  "prHourlyLimit": 0,
  "platform": "github",
  "requireConfig": "required",
  "rebaseWhen": "conflicted",
  "commitBodyTable": true,
  "separateMajorMinor": false,
  "suppressNotifications": [
    "prIgnoreNotification"
  ],
  "helm-values": {
    "managerFilePatterns": [
      "/\\.*\\.ya?ml$/"
    ]
  },
  "kubernetes": {
    "managerFilePatterns": [
      "/\\.*\\.ya?ml$/"
    ]
  },
  "customManagers": [
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/\\.*\\.ya?ml$/"
      ],
      "matchStrings": [
        "# renovate: datasource=github-tags depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\\s.*?version:\\s*(?<currentValue>.*)\\s",
        "# renovate: datasource=github-tags depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\\s.*?version:\\s*['\"](?<currentValue>.*)['\"]\\s"
      ],
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
      "datasourceTemplate": "github-tags"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/\\.*\\.ya?ml$/"
      ],
      "matchStrings": [
        "url:\\s*oci://ghcr.io/defenseunicorns/packages/init:(?<currentValue>v\\d+\\.\\d+\\.\\d+)-skeleton"
      ],
      "datasourceTemplate": "github-tags",
      "depNameTemplate": "defenseunicorns/zarf",
      "versioningTemplate": "semver"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/\\.*\\.ya?ml$/"
      ],
      "matchStrings": [
        "# renovate: datasource=docker( versioning=(?<versioning>.*?))?\n\\s*-\\s+(?<depName>[^:]+):(?<currentValue>.*)"
      ],
      "datasourceTemplate": "docker"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/\\.*\\.ya?ml$/"
      ],
      "matchStrings": [
        "# renovate: image=(?<depName>.*?)\\s*image:\\s.*:(?<currentValue>.*)",
        "# renovate: image=(?<depName>.*?)\\s*tag:\\s*(?<currentValue>.*)"
      ],
      "datasourceTemplate": "docker"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/\\.*\\.ya?ml$/"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?)\n *chart: (?<depName>.*?)\n *version: (?<currentValue>.*)\n",
        "# renovate: datasource=helm\n\\s.*- name: (?<depName>.*?)\n *url: (?<registryUrl>.*?)\n *version: (?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "helm"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/(^|/)zarf\\.yaml$/"
      ],
      "matchStrings": [
        "- ['\"]?(?<depName>[^\"'\\s]+):(?<currentValue>[^\"'\\s]+)['\"]?( # renovate:( versioning=(?<versioning>.*?))?( extractVersion=(?<extractVersion>.*?))?)?(\\s|$)"
      ],
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}docker{{/if}}",
      "extractVersionTemplate": "{{#if extractVersion}}{{{extractVersion}}}{{else}}^(?<version>.*)${{/if}}",
      "datasourceTemplate": "docker"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/\\.*\\.ya?ml$/"
      ],
      "matchStrings": [
        "# renovate: datasource=gitlab-tags depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?( registryUrl=(?<registryUrl>.*?))?\\s.*?_version:\\s*(?<currentValue>[.*])\\s",
        "# renovate: datasource=gitlab-tags depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?( registryUrl=(?<registryUrl>.*?))?\\s.*?_version:\\s*['\"](?<currentValue>.*)['\"]\\s"
      ],
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
      "datasourceTemplate": "gitlab-tags"
    }
  ],
  "packageRules": [
    {
      "matchFileNames": [
        "src/istio/**"
      ],
      "groupName": "istio",
      "commitMessageTopic": "istio"
    },
    {
      "matchFileNames": [
        "src/promtail/**"
      ],
      "groupName": "promtail",
      "commitMessageTopic": "promtail"
    },
    {
      "matchPackageNames": [
        "defenseunicorns/zarf"
      ],
      "groupName": "zarf",
      "commitMessageTopic": "zarf"
    },
    {
      "matchFileNames": [
        ".github/**"
      ],
      "groupName": "githubactions",
      "commitMessageTopic": "githubactions",
      "pinDigests": true,
      "matchPackageNames": [
        "/!defenseunicorns/zarf/"
      ]
    },
    {
      "matchFileNames": [
        "package.json",
        "package-lock.json"
      ],
      "groupName": "pepr",
      "commitMessageTopic": "pepr"
    }
  ]
}
