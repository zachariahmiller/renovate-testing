{
  "enabled": true,
  "extends": [
    ":dependencyDashboard",
    ":semanticCommits",
    ":semanticCommitTypeAll(chore)",
    ":semanticCommitScopeDisabled"
  ],
  "forkProcessing": "enabled",
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "branchConcurrentLimit": 0,
  "prConcurrentLimit": 0,
  "prHourlyLimit": 0,
  "rebaseStalePrs": true,
  "platform": "github",
  "requireConfig": "required",
  "rebaseWhen": "conflicted",
  "commitBodyTable": true,
  "separateMajorMinor": false,
  "suppressNotifications": ["prIgnoreNotification"],
  "helm-values": {
    "fileMatch": ["\\.*\\.ya?ml$"]
  },
  "kubernetes": {
    "fileMatch": ["\\.*\\.ya?ml$"]
  },
  "regexManagers":[
    {
      "fileMatch": ["\\.*\\.ya?ml$"],
      "matchStrings": [
        "# renovate: datasource=github-tags depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\\s.*?version:\\s*(?<currentValue>.*)\\s",
        "# renovate: datasource=github-tags depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\\s.*?version:\\s*['\"](?<currentValue>.*)['\"]\\s"
      ],
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
      "datasourceTemplate": "github-tags"
    },

    {
      "fileMatch": ["\\.*\\.ya?ml$"],
      "matchStrings": ["url:\\s*oci://ghcr.io/defenseunicorns/packages/init:(?<currentValue>v\\d+\\.\\d+\\.\\d+)-skeleton"],
      "datasourceTemplate": "github-tags",
      "depNameTemplate": "defenseunicorns/zarf",
      "versioningTemplate": "semver"
    },
    {
      "fileMatch": ["\\.*\\.ya?ml$"],
      "matchStrings": [
        "# renovate: datasource=docker( versioning=(?<versioning>.*?))?\n\\s*-\\s+(?<depName>[^:]+):(?<currentValue>.*)"
      ],
      "datasourceTemplate": "docker"
    },
    {
      "fileMatch": ["\\.*\\.ya?ml$"],
      "matchStrings": [
        "# renovate: image=(?<depName>.*?)\\s*image:\\s.*:(?<currentValue>.*)",
        "# renovate: image=(?<depName>.*?)\\s*tag:\\s*(?<currentValue>.*)"
      ],
      "datasourceTemplate": "docker"
    },
    {
      "fileMatch": ["\\.*\\.ya?ml$"],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?)\n *chart: (?<depName>.*?)\n *version: (?<currentValue>.*)\n",
        "# renovate: datasource=helm\n\\s.*- name: (?<depName>.*?)\n *url: (?<registryUrl>.*?)\n *version: (?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "helm"
    },
    {
      "fileMatch": ["\\.*\\.ya?ml$"],
      "matchStrings": [
        "# renovate: datasource=gitlab-tags depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?( registryUrl=(?<registryUrl>.*?))?\\s.*?_version:\\s*(?<currentValue>[.*])\\s",
        "# renovate: datasource=gitlab-tags depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?( registryUrl=(?<registryUrl>.*?))?\\s.*?_version:\\s*['\"](?<currentValue>.*)['\"]\\s"
      ],
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
      "datasourceTemplate": "gitlab-tags"
    }
  ],
  "packageRules": [
    {
      "matchFileNames": ["src/istio/**"],
      "groupName": "istio",
      "commitMessageTopic": "istio"
    },
    {
      "matchFileNames": ["src/promtail/**"],
      "groupName": "promtail",
      "commitMessageTopic": "promtail"
    },
    {
      "matchPackageNames": ["defenseunicorns/zarf"],
      "groupName": "zarf",
      "commitMessageTopic": "zarf"
    },
    { 
      "matchFileNames": [".github/**"],
      "matchPackagePatterns": ["!defenseunicorns/zarf"],
      "groupName": "githubactions",
      "commitMessageTopic": "githubactions",
      "pinDigests": true
    },
    {
      "matchFileNames": ["package.json", "package-lock.json"],
      "groupName": "pepr",
      "commitMessageTopic": "pepr"
    }
  ]
}
